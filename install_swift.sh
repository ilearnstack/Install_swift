#!/bin/bash
#you need to run this script as root user.
#Defualt user:passwd is swift:swift
#adding the "swift" user to sudoers file.
cat >> /etc/sudoers <<EOF
#adding swift user to sudoers file
swift   ALL=(ALL:ALL) ALL
EOF
echo "adding the cloud repo"
###Adding the cloud repo########
echo deb http://ubuntu-cloud.archive.canonical.com/ubuntu precise-updates/grizzly main >> /etc/apt/sources.list.d/grizzly.list
apt-get update
apt-get upgrade
sleep 2
echo 
echo

#####Adding swift package and depandency########
apt-get install -y swift swift-proxy swift-account swift-container swift-object memcached xfsprogs curl python-swiftclient


sleep 2
echo
echo


###Create Loop devices for storing objects
dd if=/dev/zero of=/srv/swift-disk bs=1024 count=0 seek=1000000
mkfs.xfs -i size=1024 /srv/swift-disk
cat >> /etc/fstab <<EOF
/srv/swift-disk /mnt/sdb1 xfs loop,noatime,nodiratime,nobarrier,logbufs=8 0 0
EOF
mkdir /mnt/sdb1
mount /mnt/sdb1
mkdir /mnt/sdb1/1 /mnt/sdb1/2 /mnt/sdb1/3 /mnt/sdb1/4
for x in {1..4}; do ln -s /mnt/sdb1/$x /srv/$x; done
mkdir -p /srv/1/node/sdb1 /srv/2/node/sdb2 /srv/3/node/sdb3 /srv/4/node/sdb4 /var/run/swift

sleep 2
echo
echo

### Remove conf files those generated by swift package ###
sudo rm -r /etc/swift
echo
echo "Remove completed"
echo 
sleep 2

###SETUP Rsyncd###
echo "[Setting up Rsyncd]"

cat >  /etc/rsyncd.conf <<EOF
uid = root
gid = root
log file = /var/log/rsyncd.log
pid file = /var/run/rsyncd.pid
address = 127.0.0.1

[account6012]
max connections = 25
path = /srv/1/node/
read only = false
lock file = /var/lock/account6012.lock

[account6022]
max connections = 25
path = /srv/2/node/
read only = false
lock file = /var/lock/account6022.lock

[account6032]
max connections = 25
path = /srv/3/node/
read only = false
lock file = /var/lock/account6032.lock

[account6042]
max connections = 25
path = /srv/4/node/
read only = false
lock file = /var/lock/account6042.lock


[container6011]
max connections = 25
path = /srv/1/node/
read only = false
lock file = /var/lock/container6011.lock

[container6021]
max connections = 25
path = /srv/2/node/
read only = false
lock file = /var/lock/container6021.lock

[container6031]
max connections = 25
path = /srv/3/node/
read only = false
lock file = /var/lock/container6031.lock

[container6041]
max connections = 25
path = /srv/4/node/
read only = false
lock file = /var/lock/container6041.lock

[object6010]
max connections = 25
path = /srv/1/node/
read only = false
lock file = /var/lock/object6010.lock

[object6020]
max connections = 25
path = /srv/2/node/
read only = false
lock file = /var/lock/object6020.lock

[object6030]
max connections = 25
path = /srv/3/node/
read only = false
lock file = /var/lock/object6030.lock

[object6040]
max connections = 25
path = /srv/4/node/
read only = false
lock file = /var/lock/object6040.lock

EOF

sed 's/RSYNC_ENABLE=false/RSYNC_ENABLE=true/g' /etc/default/rsync  -i
service rsync restart


sleep 1
echo
echo
###Generate Configuration File##
echo "[Generate Configuration Files]"

mkdir -p /etc/swift/account-server /etc/swift/container-server /etc/swift/object-server

sleep 1
#Swift.conf#
echo "			|.....Swift.conf"
cat > /etc/swift/swift.conf <<EOF
[swift-hash]
swift_hash_path_suffix = swift
EOF

sleep 1
echo "			|"
#proxy-server.conf#
echo "			|.....proxy-server.conf"
cat > /etc/swift/proxy-server.conf << EOF
[DEFAULT]
workers = 1
user = root
bind_port = 8080

[pipeline:main]
pipeline = healthcheck cache tempauth proxy-server

[app:proxy-server]
use = egg:swift#proxy
allow_account_management = true
account_autocreate = true

[filter:tempauth]
use = egg:swift#tempauth
user_admin_admin = admin .admin .reseller_admin
user_test_tester = testing .admin
user_test2_tester2 = testing2 .admin
user_test_tester3 = testing3

[filter:healthcheck]
use = egg:swift#healthcheck

[filter:cache]
use = egg:swift#memcache
EOF


sleep 1
echo "			|"	

#Container Configurations

#Account Server conf#
echo "			|.....Account Server conf"
for ((i=1;i<=4;i=i+1))
do
port=$((6002+i*10))
cat > /etc/swift/account-server/$((i)).conf << EOF
[DEFAULT]
devices = /srv/$((i+1))/node
mount_check = false
bind_port = $port
user = root

[pipeline:main]
pipeline = account-server

[app:account-server]
use = egg:swift#account

[account-replicator]
vm_test_mode = yes

[account-auditor]

[account-reaper]

EOF
done	
sleep 1
echo "			|"


echo "			|.....Container Server Confs"
for ((i=1;i<=4;i=i+1))
do
port=$((6001+i*10))
cat > /etc/swift/container-server/$((i)).conf << EOF
[DEFAULT]
devices = /srv/$((i+1))/node
mount_check = false
bind_port = $port
user = root

[pipeline:main]
pipeline = container-server

[app:container-server]
use = egg:swift#container

[container-replicator]
vm_test_mode = yes

[container-updater]

[container-auditor]

[container-sync]

EOF
done

sleep 1
echo "			|"

#Object Configurations
echo "			|.....Object server Confs"
for ((i=1;i<=4;i=i+1))
do
port=$((6000+i*10))
cat > /etc/swift/object-server/$((i)).conf << EOF
[DEFAULT]
devices = /srv/$((i+1))/node
mount_check = false
bind_port = $port
user = root

[pipeline:main]
pipeline = object-server

[app:object-server]
use = egg:swift#object

[object-replicator]
vm_test_mode = yes

[object-updater]

[object-auditor]

EOF
done
sleep 1
echo
 
#Starting Ring 

echo "             ------------ ***** Staring the Ring ***** ------------"

cd /etc/swift

rm -f *.builder *.ring.gz backups/*.builder backups/*.ring.gz

swift-ring-builder object.builder create 18 3 1
swift-ring-builder object.builder add z1-127.0.0.1:6010/sdb1 1
swift-ring-builder object.builder add z2-127.0.0.1:6020/sdb2 1
swift-ring-builder object.builder add z3-127.0.0.1:6030/sdb3 1
swift-ring-builder object.builder add z4-127.0.0.1:6040/sdb4 1
swift-ring-builder object.builder rebalance
swift-ring-builder container.builder create 18 3 1
swift-ring-builder container.builder add z1-127.0.0.1:6011/sdb1 1
swift-ring-builder container.builder add z2-127.0.0.1:6021/sdb2 1
swift-ring-builder container.builder add z3-127.0.0.1:6031/sdb3 1
swift-ring-builder container.builder add z4-127.0.0.1:6041/sdb4 1
swift-ring-builder container.builder rebalance
swift-ring-builder account.builder create 18 3 1
swift-ring-builder account.builder add z1-127.0.0.1:6012/sdb1 1
swift-ring-builder account.builder add z2-127.0.0.1:6022/sdb2 1
swift-ring-builder account.builder add z3-127.0.0.1:6032/sdb3 1
swift-ring-builder account.builder add z4-127.0.0.1:6042/sdb4 1
swift-ring-builder account.builder rebalance

sleep 2
echo
echo


echo "             ------------ ***** Staring all the Swift service ***** ------------"
sleep 1
echo
echo

##Start all the services###
echo "Starting all swift service "
echo
echo
swift-init all start
